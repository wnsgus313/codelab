"""empty message

Revision ID: 53e17445c817
Revises: 
Create Date: 2022-05-09 16:33:43.673679

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '53e17445c817'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('room')
    op.drop_table('file')
    op.drop_table('atttend')
    op.drop_table('solve_check')
    op.drop_table('registrations')
    op.drop_table('solve')
    op.drop_table('users')
    op.drop_table('joins')
    op.drop_table('registerations')
    op.drop_table('state')
    op.drop_table('regist')
    op.drop_table('likes')
    op.drop_constraint(None, 'code', type_='foreignkey')
    op.create_foreign_key(None, 'code', 'problem', ['problem_id'], ['id'], ondelete='CASCADE')
    op.drop_column('code', 'source')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.add_column('log', sa.Column('timestamp', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_log_timestamp'), 'log', ['timestamp'], unique=False)
    op.drop_column('log', 'log')
    op.drop_index('ix_user_username', table_name='user')
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.create_index('ix_user_username', 'user', ['username'], unique=False)
    op.add_column('log', sa.Column('log', sa.TEXT(), nullable=True))
    op.drop_index(op.f('ix_log_timestamp'), table_name='log')
    op.drop_column('log', 'timestamp')
    op.create_foreign_key(None, 'comment', 'user', ['username'], ['username'])
    op.add_column('code', sa.Column('source', sa.VARCHAR(length=10000), nullable=True))
    op.drop_constraint(None, 'code', type_='foreignkey')
    op.create_foreign_key(None, 'code', 'problem', ['problem_id'], ['id'])
    op.create_table('likes',
    sa.Column('comment_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('comment_id', 'user_id')
    )
    op.create_table('regist',
    sa.Column('problem_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('problem_id', 'user_id')
    )
    op.create_table('state',
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('color', sa.VARCHAR(length=30), nullable=True),
    sa.Column('emoji', sa.VARCHAR(length=30), nullable=True),
    sa.Column('position', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('room_id', 'user_id')
    )
    op.create_table('registerations',
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('room_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('joins',
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('room_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=128), nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), nullable=True),
    sa.Column('confirmed', sa.BOOLEAN(), nullable=True),
    sa.CheckConstraint('confirmed IN (0, 1)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solve',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('problem_id', sa.INTEGER(), nullable=True),
    sa.Column('resolved', sa.BOOLEAN(), nullable=True),
    sa.CheckConstraint('resolved IN (0, 1)'),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('registrations',
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('room_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('solve_check',
    sa.Column('solve_id', sa.INTEGER(), nullable=True),
    sa.Column('problem_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.ForeignKeyConstraint(['solve_id'], ['solve.id'], )
    )
    op.create_table('atttend',
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('room_id', 'user_id')
    )
    op.create_table('file',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('problem_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('room',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('room_name', sa.VARCHAR(length=128), nullable=True),
    sa.Column('host_id', sa.INTEGER(), nullable=True),
    sa.Column('room_code', sa.VARCHAR(length=64), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['host_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
